name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: ["*"]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Run cargo check
        uses: dtolnay/rust-toolchain@stable
        with:
          command: check

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  lint:
    name: Lint
    runs-on: ubuntu-latest
    # Make sure CI fails on all warnings, including Clippy lints
    env:
      RUSTFLAGS: "-Dwarnings"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy

      - name: Run clippy
        run: make clippy

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Run tests and generate code coverage
        run: make coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true
